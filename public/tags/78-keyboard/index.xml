<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>78% Keyboard on So</title>
    <link>https://sokinpui.github.io/Blog/tags/78-keyboard/</link>
    <description>Recent content in 78% Keyboard on So</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 07 Apr 2023 17:43:58 +0800</lastBuildDate><atom:link href="https://sokinpui.github.io/Blog/tags/78-keyboard/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Dynamic number-symbol row in vim</title>
      <link>https://sokinpui.github.io/Blog/post/kmonad/3-dyn-num-sym/</link>
      <pubDate>Fri, 07 Apr 2023 17:43:58 +0800</pubDate>
      
      <guid>https://sokinpui.github.io/Blog/post/kmonad/3-dyn-num-sym/</guid>
      <description>Abstraction Provide a way to dynamic swap numbers and symbols in vim according to current mode.
How this idea come When I write code or writing, I often find the symbols should be easily type as single key stroke, while in vim normal mode I find I would like to press number in single mode instead of pressing with shift. At first, I searched online for solution, many of them suggested to swap numbers and symbols, and I agree it may convient while coding.</description>
      <content:encoded><![CDATA[<h1 id="abstraction">Abstraction</h1>
<p>Provide a way to dynamic swap numbers and symbols in vim according to current
mode.</p>
<h1 id="how-this-idea-come">How this idea come</h1>
<p>When I write code or writing, I often find the symbols should be easily type as
single key stroke, while in vim normal mode I find I would like to press number
in single mode instead of pressing with <code>shift</code>. At first, I searched online for
solution, many of them suggested to swap numbers and symbols, and I agree it may
convient while coding. However, I am not coding all day, even during coding, in
vim normal mode something it is handy to use number for <code>[count]</code> and command
together. So swapping force you to choose one of them for more convenience
typing. Another solution is to use number pad layer, I would say it is same as
swapping, since I have to press with another key to use numbers, the problem
havn&rsquo;t been solved.</p>
<p>One day, When I was editing code, the idea of toggling nubmer-symbol row come in
my mind, then I implement it, and find it solve the problem quite well regarding
not prefect.</p>
<h1 id="number-symbols-toggle">Number-symbols toggle</h1>
<p>Well, it is actually a dead key leader, when I press the <code>toggle key</code> which is
<code>equal sign</code> of my keyboard. The nubmer row will swap to symbol row, press
again, back to number.</p>
<h1 id="dynamic-number-symbols-row-in-vim">Dynamic Number-symbols row in vim</h1>
<p>Since vim is modual, when insert mode, I prefer using symbols over numbers, when
normal mode, I prefer the opposite. Then I add some rules for the toggle keys.</p>
<p>Back to normal mode, which is equivalent to press the <code>esc</code> key, so when press
<code>esc</code> key, define <code>nst</code> to False. It means toggle number rows.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[:escape :left_control nil {:alone [ [&#34;nst&#34; 0] [&#34;n-layer&#34; 0] :escape  ]} ]
</span></span></code></pre></div><p>The above snippets is goku code, a config layer on top of <a href="https://karabiner-elements.pqrs.org/">Download
Karabiner Elements</a>, which is a tools for
Mac to remap keyboard layouts.</p>
<p>Enter insert mode, is equivalent to <code>a</code>, <code>i</code>, <code>s</code>, <code>A</code>, <code>I</code>, <code>S</code>, <code>o</code>, <code>O</code>, <code>c</code>,
<code>C</code>. Then turn <code>nst</code> to True when type those key.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[:i                           [:i  [&#34;nst&#34; 1]]]   
</span></span><span class="line"><span class="cl">[:a                           [:a  [&#34;nst&#34; 1]]]   
</span></span><span class="line"><span class="cl">[:s                           [:s  [&#34;nst&#34; 1]]]   
</span></span><span class="line"><span class="cl">[:c                           [:c  [&#34;nst&#34; 1]]]   
</span></span><span class="line"><span class="cl">[:o                           [:o  [&#34;nst&#34; 1]]]   
</span></span></code></pre></div><p>The above code define <code>nst</code> to True when type <code>i</code> ( not <code>I</code> ).</p>
<p>Furthur more, there is a few more situation I would prefer symbols over number,
they are searching and command mode. Then I add those lines also.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">[:semicolon                   [:semicolon [&#34;nst&#34; 1]]]   
</span></span><span class="line"><span class="cl">[:slash                       [:slash [&#34;nst&#34; 1]] ]
</span></span></code></pre></div><h1 id="inprefect">Inprefect</h1>
<p>Since the layer is define outside vim, it can not avoid symbols row toggle
during normal mode, when I type <code>yip</code> in normal mode, the symbol row toggle.
Although I can have some line like <code>inoremap 1 !</code> and <code>cnoremap 2 @</code>, I don&rsquo;t
want to pollute my mapping to much, I give up to implement this in pure vim way.
I am interesting to find how to let karabiner know that I am in vim normal mode,
so that avoid toggle symbol row accidently.</p>
<p>I have remap <code>equal sign</code> to the <code>caps lock</code>, so it is possible for me to have
one dead key, if you want to implement also, you may find your own.</p>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
